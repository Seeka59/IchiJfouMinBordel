/*using Mirror;
using UnityEngine;
using InputController;
using UnityEngine.InputSystem;

   

public class PlayerShoot : NetworkBehaviour
{ 
    private CustomControllers m_controls;
    private Animator m_animator;
    public GameObject projectile;
    public Camera cam;
    public Transform LHFirePoint, RHFirePoint;
    private Vector3 destination;
    private bool leftHand;
    public float projectileSpeed = 30f;
    void Start()
    {

    }
    void Update()
    {
    if(m_controls.Mouvement.Shoot(true))
     {ShootProjectile();}
    }
    


      void ShootProjectile(InputAction.CallbackContext _obj)
    {
        Ray ray = cam.ViewportPointToRay(new Vector3(0.5f,0.5f,0));
        RaycastHit hit;
        if(Physics.Raycast(ray, out hit))
        destination = hit.point;
        else
        destination = ray.GetPoint(1000);
        if(leftHand){
            leftHand = false;
            InstantiateProjectile(LHFirePoint);
        }
        else{
            leftHand = true;
            InstantiateProjectile(RHFirePoint);

        }
    }
    void InstantiateProjectile(Transform firePoint)
    {
        var projectileObj = Instantiate(projectile, firePoint.position, Quaternion.identity) as GameObject;
        projectileObj.GetComponent<Rigidbody>().velocity = (destination = firePoint.position).normalized*projectileSpeed;
    }
}*/ 